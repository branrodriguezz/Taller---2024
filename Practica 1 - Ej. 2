El administrador de un edificio de oficinas cuenta, en papel, con la información del pago de las expensas de dichas oficinas.
Implementar un programa que invoque a módulos para cada uno de los siguientes puntos:
a. Genere un vector, sin orden, con a lo sumo las 300 oficinas que administra. 
De cada oficina se ingresa el código de identificación, DNI del propietario y valor de la expensa. 
La lectura finaliza cuando se ingresa el código de identificación -1, el cual no se procesa.
b. Ordene el vector, aplicando el método de inserción, por código de identificación de la oficina.
c. Ordene el vector aplicando el método de selección, por código de identificación de la oficina.

program ej2p1;
const
  dimF = 300;
type
  ofi = 1..dimF;
  oficina = record;
    cod: integer;
    dni: integer;
    valor: real;
  end;
  vectoroficinas = array [ofi] of oficina;

procedure leeroficina (var o: oficina);
begin
  read (v.cod);
  if (v.cod <> -1) then begin
    read (v.dni);
    read (v.valor);
  end;
end;

procedure agregarvector (var v:vectoroficinas; o: oficina var dimL: integer);
begin
  if (dimL < dimF) do begin
    v [dimL]:= o;
    dimL:= dimL + 1;
  end;
end;

procedure generarvector (var v: vectoroficinas; var dimL: integer);
var
  o: oficina;
begin
  leeroficina (o);
  while (v.cod <> -1) do begin
    agregarvector (v,o, dimL);
    leeroficina (o);
  end;
end;

procedure ordenarVectorinsercion (var v: vector; dimL: integer);
var
  i,j, act: integer; 
begin
  for i:= 2 to dimL do begin
    act:= v[i].cod;
    j:= i-1;
    while (j > 0) and (v[j].cod › actual) do
      begin
        v[j+1]:= v[J];
        j:= j - 1;
      end;
    v[j+1]:= act;
  end;
end;

procedure ordenarVectorseleccion (var v: vector; dimL: integer);
var
  i,j,pos,act: integer;
begin
  for i:= 1 to (dimL-1) do begin 
    pos := i;
    for j := (i+1) to dimL do begin
      if (v[j].cod ‹ v[pos].cod) then 
        pos:= j;
    end;
    act := v[pos];
    v[pos]:= v[i];
    v[i] := act;
  end;
end;

var
  v: vectoroficinas;
  dimL: integer;
begin
  dimL:= 0;
  generarvector (v,dimL); //inciso A;
  ordenarVectorinsercion (v, dimL); // inciso B;
  ordenarVectorseleccion (v,dimL); //inciso C;
end.
