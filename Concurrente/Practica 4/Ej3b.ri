{3. Sincronización barrera}
{Tres robots deben vaciar de papeles su avenida, comenzando por la calle 1 y terminando en la calle 100. El trabajo lo deben realizar todos juntos y en etapas: los robots inician juntos y cuando todos completan una etapa del trabajo pueden avanzar a la siguiente, lo que significa que para poder pasar de etapa los robots deben esperar que todos hayan completado la etapa en curso. Se proponen dos posibles soluciones a este problema: etapas homogéneas o etapas heterogéneas:}
{b) Implemente el programa considerando que cada robot completa una etapa luego de juntar N papeles.} {El valor de N (entre 1 y 5) lo calcula cada robot antes de iniciar cada etapa.}
{En cada solución, analice cómo debería finalizar el programa.}
{Los robots inician en las esquinas (1,1), (2,1) y (3,1) respectivamente. Existe un robot coordinador, cuya única tarea es asignar identificadores a cada robot.}

programa p4ej3b {cada robot completa una etapa cada 5 esquinas}
procesos

  proceso mandarIds
  comenzar
    
    EnviarMensaje (1, r1)
    EnviarMensaje (2, r2)
    EnviarMensaje (3, r3)
    
  fin
 
  proceso juntarPapeles (ES pap: numero)
  comenzar
  
    mientras (HayPapelEnLaEsquina)
      tomarPapel
      pap:= pap + 1
      
  fin
  
areas
  
  areaRP1: AreaP (1,1,1,100)
  areaRP2: AreaP (2,1,2,100)
  areaRP3: AreaP (3,1,3,100)
  areaEsq: AreaP (4,1,4,1)
  
robots
  
  robot coordinador
  
  comenzar
    
    mandarIds {identificador}
      
  fin
  
  robot papelero1
  variables
  
    id: numero
    termino: boolean
    pap: numero
    n: numero
    ok: boolean
    
  comenzar
    ok:= V
    RecibirMensaje (id, rc) {me identifico}
    
    mientras (PosCa < 100) & (ok)
    
      Random (n,1,5)
      
      mientras (PosCa < 100) & (pap < n)
        juntarPapeles (pap) {termino la etapa luego de juntar N papeles.}
        mover 
        
      si (pap = n)
        EnviarMensaje (ok, r2)
        EnviarMensaje (ok, r3) {le mando mensaje a r2 y r3 que termine mi etapa}     
        pap:= 0
        RecibirMensaje (termino, r2)
        RecibirMensaje (termino, r3) {espero que r2 y r3 terminen su etapa}
    
    ok:= F
    juntarPapeles (pap)
    EnviarMensaje (ok, r2)
    EnviarMensaje (ok, r3) {le mando mensaje a r2 y r3 que termine mi etapa}
    RecibirMensaje (termino, r2)
    RecibirMensaje (termino, r3) {espero que r2 y r3 terminen su etapa}
    
  fin

  robot papelero2
  variables
  
    pap: numero
    n: numero
    id: numero
    ok, termino: boolean
    
  comenzar
  
    pap:= 0
    ok:= V
    RecibirMensaje (id, rc)
    
    mientras (PosCa < 100) & (ok)
    
      Random (n,1,5)
      
      mientras (PosCa < 100) & (pap < n)
        juntarPapeles (pap) {termino la etapa luego de juntar N papeles.}
        mover
       
      si (pap = n)
        EnviarMensaje (ok, r1)
        EnviarMensaje (ok, r3)
        pap:= 0
        RecibirMensaje (termino, r1)
        RecibirMensaje (termino, r3)
    
    ok:= F
    juntarPapeles (pap)
    EnviarMensaje (ok, r1)
    EnviarMensaje (ok, r3)
    RecibirMensaje (termino, r1)
    RecibirMensaje (termino, r3)
    
  fin
 
  robot papelero3
  variables
  
    pap: numero
    n: numero
    id: numero
    termino: boolean
    ok: boolean
  comenzar
    pap:= 0
    RecibirMensaje (id, rc)
    ok:= V
    mientras (PosCa < 100) & (ok)
    
      Random (n,1,5)
      
      mientras (PosCa < 100) & (pap < n)
        juntarPapeles (pap) {termino la etapa luego de juntar N papeles.}
        mover
        
      si (pap = n)
        EnviarMensaje (ok, r1)
        EnviarMensaje (ok, r2) {le mando mensaje a r2 y r3 que termine mi etapa}     
        pap:= 0
        RecibirMensaje (termino, r1)
        RecibirMensaje (termino, r2)
    
    ok:= F
    juntarPapeles (pap)
    EnviarMensaje (ok, r1)
    EnviarMensaje (ok, r2)
    RecibirMensaje (termino, r1)
    RecibirMensaje (termino, r2)  
       
  fin
  
variables
  
  rc: coordinador
  r1: papelero1
  r2: papelero2
  r3: papelero3
  
comenzar
  
  AsignarArea (rc, areaEsq)
  AsignarArea (r1, areaRP1)
  AsignarArea (r2, areaRP2)
  AsignarArea (r3, areaRP3)
  
  Iniciar (rc, 4,1)
  Iniciar (r1, 1,1)
  Iniciar (r2, 2,1)
  Iniciar (r3, 3,1)
  
fin
